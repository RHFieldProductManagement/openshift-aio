---
# vim: set ft=ansible:

- name: Reload inventory for bastion host
  hosts: localhost
  tasks:

    - meta: refresh_inventory

- name: Deploy OpenShift Virtualization Lab
  gather_facts: false
  vars_files:
    - "../conf/vms.yml"
  hosts: bastion
  tasks:

    - name: Copy over k8s-aio env requirements.txt
      ansible.builtin.copy:
        src: ../conf/k8s/requirements.txt
        dest: /tmp/requirements.txt

    - name: "Create k8s-aio venv"
      pip:
        requirements: "/tmp/requirements.txt"
        virtualenv: "/opt/virtualenvs/k8s-aio"
        virtualenv_site_packages: true
        virtualenv_command: "/usr/bin/virtualenv"

    - name: "Set Ansible interpreter to venv"
      set_fact:
        ansible_python_interpreter: /opt/virtualenvs/k8s-aio/bin/python

    - name: Create project for workbook
      k8s:
        state: present
        definition: "{{ lookup('file', '../labs/cnv/conf/cnvlab-project.yaml') }}"
      register: project_success
      retries: 3
      delay: 30
      until: project_success is not failed
 
    - name: Clone OpenShift virt repositories
      git:
        repo: "https://github.com/RHFieldProductManagement/openshift-aio.git"
        dest: "/root/openshift-aio"
        version: "main"

    - name: Deploy Workbook Instance for CNV Labs
      block:
      - name: Configure and apply build template
        shell: >-
          oc -n workbook process
          -f /root/openshift-aio/labs/cnv/build-template.yaml -p NAME=cnv | oc -n workbook apply -f -
        register: buildt_success
        retries: 3
        delay: 30
        until: buildt_success is not failed

      - name: Start the build
        shell: oc -n workbook start-build cnv --from-dir=/root/openshift-aio/labs/cnv
        register: build_success
        retries: 3
        delay: 30
        until: build_success is not failed

      - name: Configure and deploy the deploy template
        shell: >-
          oc -n workbook process
          -f /root/openshift-aio/labs/cnv/deploy-template.yaml -p NAME=cnv -p IMAGE_STREAM_NAME=cnv
          | oc -n workbook apply -f -
        register: deploy_success
        retries: 3
        delay: 30
        until: deploy_success is not failed

    - name: Give cluster-admin privileges to CNV user
      k8s:
        state: present
        definition: "{{ lookup('file', '../labs/cnv/conf/cnvlab-admin.yaml') }}"
      register: clusteradmin_success
      retries: 3
      delay: 30
      until: clusteradmin_success is not failed

    - name: Get CNV Lab Workbook Route
      k8s_info:
        kind: Route
        api_version: route.openshift.io/v1
        namespace: "workbook"
        label_selectors:
          - app = cnv
      register: getroute

    - name: Print CNV Lab Workbook Route
      debug:
        msg: "OpenShift Virtualization Lab Workbook: https://{{ getroute.resources[0].spec.host }}"
