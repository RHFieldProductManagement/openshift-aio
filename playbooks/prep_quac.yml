# - name: Deploy VNC server on bastion
#   gather_facts: false
#   remote_user: root
# #  hosts: bastion
#   tasks:

- name: Install GUI packages for Guac VNC session
  dnf:
    name:
      - "@Server with GUI"
      - tigervnc-server
    state: latest
  become: True

- set_fact:
    labuser_password: "redhat"

- name: Ensure VNC directory exists for root
  ansible.builtin.file:
    path: /root/.vnc/
    state: directory

- name: Reset VNC password for root
  ansible.builtin.shell: >
    echo {{ labuser_password }} | vncpasswd -f > /root/.vnc/passwd

- name: Delete existing VNC configuration for root
  ansible.builtin.file:
    path: /root/.vnc/config
    state: absent

- name: Create VNC configuration for root
  ansible.builtin.blockinfile:
    create: yes
    path: /root/.vnc/config
    block: |
     session=gnome
     geometry=1920x1080
     localhost=no
     alwaysshared

- name: Reset permissions for /root/.vnc/config
  ansible.builtin.file:
    path: /root/.vnc/config
    mode: '0755'
    setype: _default

- name: Reset permissions for /root/.vnc/passwd
  ansible.builtin.file:
    path: /root/.vnc/passwd
    mode: '0600'
    setype: _default

- name: Delete existing VNC	configuration for root
  ansible.builtin.file:
    path: /etc/tigervnc/vncserver.users
    state: absent

- name: Ensure port 99 is for root VNC
  ansible.builtin.lineinfile:
    path: /etc/tigervnc/vncserver.users
    line: ":99=root"
    create: yes

- name: Enable VNC for port 5999
  ansible.builtin.systemd:
    name: "vncserver@:99"
    enabled: yes
    daemon_reload: yes
    state: started

- name: Enable firewalld ports for VNC
  firewalld:
    port: "{{ item }}"
    zone: public
    permanent: yes
    state: enabled
  loop:
    - "5999/tcp"

- name: Reload Firewalld
  ansible.builtin.command: firewall-cmd --reload
  register: firewalld_return
  failed_when: firewalld_return.rc > 0
